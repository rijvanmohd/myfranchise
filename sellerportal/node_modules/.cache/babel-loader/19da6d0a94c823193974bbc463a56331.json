{"ast":null,"code":"var _jsxFileName = \"/Users/rijvanmohd/myfranchise/sellerportal/src/components/accounts/AddProduct.js\";\nimport React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartTwoToneIcon from '@material-ui/icons/AddShoppingCartTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withSnackbar } from 'notistack';\nimport { ProductAPI } from \"../../api/product\";\nimport { InfoContext } from \"../../context/authContext\";\n/**\nUsed for adding new product \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    // marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    [theme.breakpoints.down('sm')]: {\n      height: '12',\n      width: '12'\n    }\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      width: '60%',\n      fontSize: '1rem'\n    }\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction AddProduct(props) {\n  const [name, setName] = React.useState('');\n  const [desc, setDesc] = React.useState('');\n  const [quantity, setQuantity] = React.useState(0);\n  const {\n    info,\n    setInfo\n  } = useContext(InfoContext);\n  const classes = useStyles();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim().length === 0) {\n      props.enqueueSnackbar('Please Enter Product Name', {\n        variant: 'error'\n      });\n    } else if (quantity.trim().length === 0) {\n      props.enqueueSnackbar('Please Enter Quantity', {\n        variant: 'error'\n      });\n    } else {\n      const data = {\n        'name': name,\n        'description': desc,\n        'total_quantity': quantity,\n        'current_quantity': quantity,\n        'seller': info.seller.id\n      };\n      ProductAPI.create(data).then(response => {\n        if (response.status === 201) {\n          props.enqueueSnackbar('Product Added Successfully', {\n            variant: 'success'\n          });\n          props.setOpen(false);\n        } else {\n          props.enqueueSnackbar(response.data.message, {\n            variant: 'error'\n          });\n        }\n      }).catch(err => {\n        //   console.log('err',err.response)\n        props.enqueueSnackbar(err.response.data.message, {\n          variant: 'error'\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCartTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"name\",\n              name: \"Product Name\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              onChange: event => {\n                setName(event.target.value);\n              },\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"quantity\",\n              label: \"Quantity\",\n              name: \"quantity\",\n              type: \"number\",\n              onChange: event => {\n                setQuantity(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              rows: 3,\n              multiline: true,\n              id: \"desc\",\n              label: \"Description\",\n              name: \"desc\",\n              onChange: event => {\n                setDesc(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: handleSubmit,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\nexport default withSnackbar(AddProduct);","map":{"version":3,"sources":["/Users/rijvanmohd/myfranchise/sellerportal/src/components/accounts/AddProduct.js"],"names":["React","useContext","Avatar","Button","CssBaseline","TextField","Grid","AddShoppingCartTwoToneIcon","Typography","makeStyles","Container","withSnackbar","ProductAPI","InfoContext","useStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","breakpoints","down","height","width","form","marginTop","fontSize","submit","AddProduct","props","name","setName","useState","desc","setDesc","quantity","setQuantity","info","setInfo","classes","handleSubmit","event","preventDefault","trim","length","enqueueSnackbar","variant","data","seller","id","create","then","response","status","setOpen","message","catch","err","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,0BAAP,MAAuC,2CAAvC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GADgC;AAOvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CADF;AAENC,IAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC,IAFnC;AAGN,KAACX,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BC,MAAAA,MAAM,EAAC,IADqB;AAE5BC,MAAAA,KAAK,EAAC;AAFsB;AAH1B,GAP+B;AAevCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAE,MADH;AAEJE,IAAAA,SAAS,EAAEjB,KAAK,CAACO,OAAN,CAAc,CAAd,CAFP;AAGJ,KAACP,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BE,MAAAA,KAAK,EAAC,KADsB;AAE5BG,MAAAA,QAAQ,EAAC;AAFmB;AAH5B,GAfiC;AAuBvCC,EAAAA,MAAM,EAAE;AACNb,IAAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAvB+B,CAAZ,CAAD,CAA5B;;AA4BA,SAASa,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtC,KAAK,CAACuC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzC,KAAK,CAACuC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B3C,KAAK,CAACuC,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM;AAACK,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkB5C,UAAU,CAACY,WAAD,CAAlC;AAEA,QAAMiC,OAAO,GAAGhC,SAAS,EAAzB;;AAGA,QAAMiC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGZ,IAAI,CAACa,IAAL,GAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACxBf,MAAAA,KAAK,CAACgB,eAAN,CAAsB,2BAAtB,EAAkD;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAlD;AACH,KAFD,MAGK,IAAGX,QAAQ,CAACQ,IAAT,GAAgBC,MAAhB,KAA2B,CAA9B,EAAgC;AACjCf,MAAAA,KAAK,CAACgB,eAAN,CAAsB,uBAAtB,EAA8C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9C;AACH,KAFI,MAGA;AACD,YAAMC,IAAI,GAAG;AAAC,gBAAOjB,IAAR;AAAa,uBAAcG,IAA3B;AAAgC,0BAAiBE,QAAjD;AAA0D,4BAAmBA,QAA7E;AAAsF,kBAASE,IAAI,CAACW,MAAL,CAAYC;AAA3G,OAAb;AACA5C,MAAAA,UAAU,CAAC6C,MAAX,CAAkBH,IAAlB,EACCI,IADD,CACOC,QAAD,IAAa;AACX,YAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvBxB,UAAAA,KAAK,CAACgB,eAAN,CAAsB,4BAAtB,EAAmD;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAnD;AACAjB,UAAAA,KAAK,CAACyB,OAAN,CAAc,KAAd;AACH,SAHD,MAII;AACAzB,UAAAA,KAAK,CAACgB,eAAN,CAAsBO,QAAQ,CAACL,IAAT,CAAcQ,OAApC,EAA4C;AAAET,YAAAA,OAAO,EAAE;AAAX,WAA5C;AACH;AACJ,OATL,EAWCU,KAXD,CAWQC,GAAD,IAAO;AACZ;AACE5B,QAAAA,KAAK,CAACgB,eAAN,CAAsBY,GAAG,CAACL,QAAJ,CAAaL,IAAb,CAAkBQ,OAAxC,EAAgD;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAhD;AACH,OAdD;AAeH;AACJ,GA1BD;;AA4BA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEP,OAAO,CAAC9B,KAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAE8B,OAAO,CAAC1B,MAA3B;AAAA,+BACE,QAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAM,QAAA,SAAS,EAAE0B,OAAO,CAACf,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,YAAY,EAAC,MADf;AAEE,cAAA,IAAI,EAAC,cAFP;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,QAAQ,MAJV;AAKE,cAAA,SAAS,MALX;AAME,cAAA,EAAE,EAAC,MANL;AAOE,cAAA,KAAK,EAAC,MAPR;AAQE,cAAA,QAAQ,EAAGiB,KAAD,IAAS;AAACV,gBAAAA,OAAO,CAACU,KAAK,CAACiB,MAAN,CAAaC,KAAd,CAAP;AAA4B,eARlD;AASE,cAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,EAAE,EAAC,UAJL;AAKE,cAAA,KAAK,EAAC,UALR;AAME,cAAA,IAAI,EAAC,UANP;AAOE,cAAA,IAAI,EAAC,QAPP;AAQE,cAAA,QAAQ,EAAGlB,KAAD,IAAS;AAACL,gBAAAA,WAAW,CAACK,KAAK,CAACiB,MAAN,CAAaC,KAAd,CAAX;AAAgC;AARtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF,eA0BE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,IAAI,EAAE,CAHR;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,EAAE,EAAC,MALL;AAME,cAAA,KAAK,EAAC,aANR;AAOE,cAAA,IAAI,EAAC,MAPP;AAQE,cAAA,QAAQ,EAAGlB,KAAD,IAAS;AAACP,gBAAAA,OAAO,CAACO,KAAK,CAACiB,MAAN,CAAaC,KAAd,CAAP;AAA4B;AARlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwCE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,SAAS,EAAEpB,OAAO,CAACZ,MALrB;AAME,UAAA,OAAO,EAAEa,YANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;AAED,eAAepC,YAAY,CAACwB,UAAD,CAA3B","sourcesContent":["import React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartTwoToneIcon from '@material-ui/icons/AddShoppingCartTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withSnackbar } from 'notistack';\nimport { ProductAPI } from \"../../api/product\";\nimport { InfoContext } from \"../../context/authContext\";\n\n/**\nUsed for adding new product \n */\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    [theme.breakpoints.down('sm')]: {\n        height:'12',\n        width:'12',\n    }\n  },\n  form: {\n    width: '100%', \n    marginTop: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n        width:'60%',\n        fontSize:'1rem'\n    }\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction AddProduct(props) {\n  const [name, setName] = React.useState('')\n  const [desc, setDesc] = React.useState('')\n  const [quantity, setQuantity] = React.useState(0)\n  const {info, setInfo} = useContext(InfoContext);\n\n  const classes = useStyles();\n\n\n  const handleSubmit = (event) => {\n      event.preventDefault()\n      if(name.trim().length === 0){\n          props.enqueueSnackbar('Please Enter Product Name',{ variant: 'error' })\n      }\n      else if(quantity.trim().length === 0){\n          props.enqueueSnackbar('Please Enter Quantity',{ variant: 'error' })\n      }\n      else {\n          const data = {'name':name,'description':desc,'total_quantity':quantity,'current_quantity':quantity,'seller':info.seller.id}\n          ProductAPI.create(data)\n          .then((response)=> {\n                  if(response.status === 201){\n                      props.enqueueSnackbar('Product Added Successfully',{ variant: 'success' })\n                      props.setOpen(false)\n                  }\n                  else{\n                      props.enqueueSnackbar(response.data.message,{ variant: 'error' })\n                  }\n              }\n          )\n          .catch((err)=>{\n            //   console.log('err',err.response)\n              props.enqueueSnackbar(err.response.data.message,{ variant: 'error' })\n          })\n      }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AddShoppingCartTwoToneIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Add Product\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"Product Name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                onChange={(event)=>{setName(event.target.value)}}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"quantity\"\n                label=\"Quantity\"\n                name=\"quantity\"\n                type=\"number\"\n                onChange={(event)=>{setQuantity(event.target.value)}}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                rows={3}\n                multiline\n                id=\"desc\"\n                label=\"Description\"\n                name=\"desc\"\n                onChange={(event)=>{setDesc(event.target.value)}}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            Add\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withSnackbar(AddProduct)"]},"metadata":{},"sourceType":"module"}