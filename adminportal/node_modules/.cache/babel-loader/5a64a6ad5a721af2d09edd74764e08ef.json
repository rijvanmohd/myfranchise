{"ast":null,"code":"var _jsxFileName = \"/Users/rijvanmohd/myfranchise/adminportal/src/components/accounts/Login.js\";\nimport React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withSnackbar } from 'notistack';\nimport { InfoContext } from \"../../context/authContext\";\nimport { UserAPI } from \"../../api/user\";\n/**\nLogin form for admin\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      width: '60%',\n      fontSize: '1rem'\n    }\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Login(props) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const {\n    info,\n    setInfo\n  } = useContext(InfoContext);\n  const classes = useStyles();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (email.trim().length === 0) {\n      props.enqueueSnackbar('Please Enter Email', {\n        variant: 'error'\n      });\n    } else if (password.trim().length === 0) {\n      props.enqueueSnackbar('Please Enter Password', {\n        variant: 'error'\n      });\n    } else {\n      const data = {\n        'email': email,\n        'password': password\n      };\n      UserAPI.login(data).then(response => {\n        console.log('respomse', response);\n\n        if (response.status === 201) {\n          setInfo({\n            'user': response.data.user,\n            'token': response.data.token,\n            'isLoggedIn': true\n          });\n        } else {\n          props.enqueueSnackbar(response.data.message, {\n            variant: 'error'\n          });\n        }\n      }).catch(err => {\n        //   console.log('err',err.response)\n        props.enqueueSnackbar(err.message, {\n          variant: 'error'\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          \"data-testid\": \"email\",\n          autoComplete: \"email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          \"data-testid\": \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: handleSubmit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\nexport default withSnackbar(Login);","map":{"version":3,"sources":["/Users/rijvanmohd/myfranchise/adminportal/src/components/accounts/Login.js"],"names":["React","useContext","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","withSnackbar","InfoContext","UserAPI","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","breakpoints","down","fontSize","submit","Login","props","email","setEmail","useState","password","setPassword","info","setInfo","classes","handleSubmit","event","preventDefault","trim","length","enqueueSnackbar","variant","data","login","then","response","console","log","status","user","token","message","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withSnackbar } from 'notistack';\nimport { InfoContext } from \"../../context/authContext\";\nimport { UserAPI } from \"../../api/user\";\n\n/**\nLogin form for admin\n */\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', \n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n        width:'60%',\n        fontSize:'1rem'\n    }\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login(props) {\n  const [email, setEmail] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const {info, setInfo} = useContext(InfoContext);\n  const classes = useStyles();\n  \n\n  const handleSubmit = (event) => {\n      event.preventDefault()\n      if(email.trim().length === 0){\n          props.enqueueSnackbar('Please Enter Email',{ variant: 'error' })\n      }\n      else if(password.trim().length === 0){\n          props.enqueueSnackbar('Please Enter Password',{ variant: 'error' })\n      }\n      else {\n          const data = {'email':email,'password':password}\n          UserAPI.login(data)\n          .then((response)=> {\n                  console.log('respomse',response)\n                  if(response.status === 201){\n                      setInfo({'user':response.data.user,'token':response.data.token,'isLoggedIn':true})\n                  }\n                  else{\n                      props.enqueueSnackbar(response.data.message,{ variant: 'error' })\n                  }\n              }\n          )\n          .catch((err)=>{\n            //   console.log('err',err.response)\n              props.enqueueSnackbar(err.message,{ variant: 'error' })\n          })\n      }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            data-testid=\"email\"\n            autoComplete=\"email\"\n            onChange={(e)=>{setEmail(e.target.value)}}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            data-testid=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e)=>{setPassword(e.target.value)}}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withSnackbar(Login)"]},"metadata":{},"sourceType":"module"}