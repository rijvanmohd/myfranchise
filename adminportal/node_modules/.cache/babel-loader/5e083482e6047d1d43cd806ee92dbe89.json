{"ast":null,"code":"var _jsxFileName = \"/Users/rijvanmohd/myfranchise/adminportal/src/components/common/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { InfoContext } from \"../../context/authContext\";\n/**\nIt makes the routes autheticated by checking the context data and further validating state.\nAlso to make guest links i.e. login which can't be accessed by logged in user.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  const {\n    info,\n    setInfo\n  } = useContext(InfoContext);\n  const {\n    type\n  } = props;\n  if (type === \"guest\" && info.isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 53\n  }, this);else if (type === \"private\" && !info.isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 61\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/rijvanmohd/myfranchise/adminportal/src/components/common/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","InfoContext","PrivateRoute","props","info","setInfo","type","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBP,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWH,KAAjB;AACA,MAAIG,IAAI,KAAK,OAAT,IAAoBF,IAAI,CAACG,UAA7B,EAAyC,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP,CAAzC,KACK,IAAID,IAAI,KAAK,SAAT,IAAsB,CAACF,IAAI,CAACG,UAAhC,EAA4C,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEjD,sBAAO,QAAC,KAAD,OAAWJ;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAPD;;AAUA,eAAeD,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { InfoContext } from \"../../context/authContext\";\n\n/**\nIt makes the routes autheticated by checking the context data and further validating state.\nAlso to make guest links i.e. login which can't be accessed by logged in user.\n */\n\nconst PrivateRoute = props => {\n    const {info, setInfo} = useContext(InfoContext);\n    const { type } = props;\n    if (type === \"guest\" && info.isLoggedIn) return <Redirect to=\"/\" />;\n    else if (type === \"private\" && !info.isLoggedIn) return <Redirect to=\"/login\" />;\n\n    return <Route {...props} />;\n};\n\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}